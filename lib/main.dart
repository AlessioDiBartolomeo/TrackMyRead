import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter_library_app/routing/app_router.dart';
import 'package:flutter_library_app/routing/app_routes.dart';
//import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:hive_flutter/hive_flutter.dart';
import 'firebase_options.dart'; // generated by FlutterFire CLI
import 'domain/models/book.dart';
import 'ui/home/widgets/home_screen.dart';

Future<void> main() async {
  //await dotenv.load(fileName: ".env");
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // Initialize Hive
  await Hive.initFlutter();
  if (!Hive.isAdapterRegistered(0)) {
    Hive.registerAdapter(BookAdapter());
  }
  if (Hive.isBoxOpen('books')) {
  await Hive.box<Book>('books').close();
  }
  await Hive.deleteBoxFromDisk('books');
  await Hive.openBox<Book>('books'); // fresh empty box


  await _ensureUserExists();

  runApp(const MyApp());
}

Future<void> _ensureUserExists() async {
  final auth = FirebaseAuth.instance;
  User? user = auth.currentUser;

  if (user == null) {
    // Sign in anonymously if no user is logged in
    final credential = await auth.signInAnonymously();
    user = credential.user;
  }

  if (user == null) return; // fail-safe

  final userDoc = FirebaseFirestore.instance.collection('users').doc(user.uid);

  // Check if document exists
  final docSnapshot = await userDoc.get();
  if (!docSnapshot.exists) {
    // Create user document with empty books
    await userDoc.set({
      'createdAt': FieldValue.serverTimestamp(),
    });
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'TrackMyRead',
      initialRoute: AppRoutes.home,
      onGenerateRoute: AppRouter.generateRoute,
      theme: ThemeData(
        primarySwatch: Colors.deepPurple,
        useMaterial3: true,
      ),
      home: const HomeScreen(),
    );
  }
}
